from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler,
    filters, ContextTypes, ConversationHandler
)
import os

TOKEN = os.getenv("TOKEN")

SHOWING_PLOTS, CONTACT = range(2)

PLOTS = [
    {
        "stage": "3 —ç—Ç–∞–ø",
        "size": "6 —Å–æ—Ç–æ–∫",
        "price": "3 900 000 ‚ÇΩ",
        "utilities": "—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ, –≥–∞–∑, –≤–æ–¥–∞, –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è"
    }
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["index"] = 0
    return await show_plot(update, context)

async def show_plot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    index = context.user_data.get("index", 0)
    if index >= len(PLOTS):
        await update.message.reply_text("üèÅ –£—á–∞—Å—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.")
        return ConversationHandler.END

    plot = PLOTS[index]
    caption = (
        f"üìç –≠—Ç–∞–ø: {plot['stage'].replace(' —ç—Ç–∞–ø', '')}
"
        f"üìê –ü–ª–æ—â–∞–¥—å: {plot['size']}
"
        f"üí∞ –¶–µ–Ω–∞: {plot['price']}
"
        f"üîå –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏: {plot['utilities']}"
    )
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("‚úÖ –í—ã–±—Ä–∞—Ç—å", callback_data="select")],
        [InlineKeyboardButton("üë§ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å", url="https://t.me/+79624406464")]
    ])
    await update.message.reply_text(text=caption, reply_markup=keyboard)
    return SHOWING_PLOTS

async def handle_action(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    context.user_data["selected"] = PLOTS[0]
    await query.edit_message_text(text="‚úÖ –£—á–∞—Å—Ç–æ–∫ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ @username:")
    return CONTACT

async def handle_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    contact = update.message.text
    plot = context.user_data.get("selected", PLOTS[0])
    msg = (
        f"üì® –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!
"
        f"–£—á–∞—Å—Ç–æ–∫: {plot.get('stage', '')}, {plot.get('size', '')}, {plot.get('price', '')}
"
        f"–ö–æ–Ω—Ç–∞–∫—Ç: {contact}

"
        "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è üôè"
    )
    await update.message.reply_text(msg)
    return ConversationHandler.END

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            SHOWING_PLOTS: [CallbackQueryHandler(handle_action)],
            CONTACT: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_contact)],
        },
        fallbacks=[]
    )

    app.add_handler(conv_handler)
    app.run_polling()
