from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    filters, ConversationHandler, ContextTypes
)
import os

TOKEN = os.getenv("TOKEN")

# Conversation states
CHOOSING, PLOT_SIZE, PLOT_BUDGET, PLOT_LOCATION, PLOT_CONTACT = range(5)

# Reply keyboard
reply_keyboard = [["üåø –£—á–∞—Å—Ç–æ–∫", "üè° –î–æ–º"]]
markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –î–æ–±—Ä—ã–π –¥–µ–Ω—å! –í—ã –∏—â–µ—Ç–µ –¥–æ–º –∏–ª–∏ —É—á–∞—Å—Ç–æ–∫?",
        reply_markup=markup
    )
    return CHOOSING

async def choose(update: Update, context: ContextTypes.DEFAULT_TYPE):
    choice = update.message.text
    if choice == "üåø –£—á–∞—Å—Ç–æ–∫":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞ (–≤ —Å–æ—Ç–∫–∞—Ö):")
        return PLOT_SIZE
    else:
        await update.message.reply_text("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —É—á–∞—Å—Ç–∫–∏ üåø")
        return ConversationHandler.END

async def plot_size(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["plot_size"] = update.message.text
    await update.message.reply_text("–ö–∞–∫–æ–π —É –≤–∞—Å –±—é–¥–∂–µ—Ç? (–≤ —Ä—É–±–ª—è—Ö)")
    return PLOT_BUDGET

async def plot_budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["plot_budget"] = update.message.text
    await update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Ä–∞–π–æ–Ω –∏–ª–∏ –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç:")
    return PLOT_LOCATION

async def plot_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["plot_location"] = update.message.text

    # Simulated offers
    offers = """–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:

üè∑ –£—á–∞—Å—Ç–æ–∫ 10 —Å–æ—Ç–æ–∫
üìç –°–µ–ª–æ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–æ–µ
üí∞ 950,000 ‚ÇΩ
üí° –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ, –≥–∞–∑ —Ä—è–¥–æ–º

üè∑ –£—á–∞—Å—Ç–æ–∫ 12 —Å–æ—Ç–æ–∫
üìç –°–µ–ª–æ –ù–∞–¥–µ–∂–¥–∞
üí∞ 1,150,000 ‚ÇΩ
üåø –ò–ñ–°, —É—á–∞—Å—Ç–æ–∫ —Ä–æ–≤–Ω—ã–π
"""
    await update.message.reply_text(offers)
    await update.message.reply_text("–û—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ @username –¥–ª—è —Å–≤—è–∑–∏:")
    return PLOT_CONTACT

async def plot_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["plot_contact"] = update.message.text
    await update.message.reply_text(
        "‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è üôè"
    )
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω—ë–Ω.")
    return ConversationHandler.END

# Initialize app
app = ApplicationBuilder().token(TOKEN).build()

conv_handler = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        CHOOSING: [MessageHandler(filters.TEXT & ~filters.COMMAND, choose)],
        PLOT_SIZE: [MessageHandler(filters.TEXT & ~filters.COMMAND, plot_size)],
        PLOT_BUDGET: [MessageHandler(filters.TEXT & ~filters.COMMAND, plot_budget)],
        PLOT_LOCATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, plot_location)],
        PLOT_CONTACT: [MessageHandler(filters.TEXT & ~filters.COMMAND, plot_contact)],
    },
    fallbacks=[CommandHandler("cancel", cancel)],
)

app.add_handler(conv_handler)
app.run_polling()
